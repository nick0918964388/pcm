services:
  # Oracle XE Database
  oracle-db:
    image: gvenzl/oracle-xe:21-slim
    container_name: photo-oracle-db
    environment:
      ORACLE_PASSWORD: Oracle123
      ORACLE_DATABASE: pcm_db
    ports:
      - "1521:1521"
      - "5500:5500"
    volumes:
      - oracle_data:/opt/oracle/oradata
      - ./backend/db/init:/docker-entrypoint-initdb.d
    networks:
      - photo-network
    healthcheck:
      test: ["CMD", "sqlplus", "-L", "sys/Oracle123@//localhost:1521/XE", "as", "sysdba", "@/dev/null"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching and Celery broker
  redis:
    image: redis:7-alpine
    container_name: photo-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - photo-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend FastAPI application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: photo-backend
    environment:
      - ORACLE_DSN=oracle-db:1521/XEPDB1
      - ORACLE_USER=photo_user
      - ORACLE_PASSWORD=photo_pass123
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - DEBUG=${DEBUG:-True}
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - uploads:/app/uploads
    depends_on:
      oracle-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - photo-network
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery worker for async tasks
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: photo-celery-worker
    environment:
      - ORACLE_DSN=oracle-db:1521/XEPDB1
      - ORACLE_USER=photo_user
      - ORACLE_PASSWORD=photo_pass123
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - uploads:/app/uploads
    depends_on:
      - redis
      - oracle-db
    networks:
      - photo-network
    command: celery -A src.celery_app worker --loglevel=info

  # Celery beat for scheduled tasks
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: photo-celery-beat
    environment:
      - ORACLE_DSN=oracle-db:1521/XEPDB1
      - ORACLE_USER=photo_user
      - ORACLE_PASSWORD=photo_pass123
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - oracle-db
    networks:
      - photo-network
    command: celery -A src.celery_app beat --loglevel=info

  # Frontend React application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: photo-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - photo-network
    command: npm start

  # Flower for Celery monitoring (optional)
  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: photo-flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      - redis
    networks:
      - photo-network
    command: celery -A src.celery_app flower

networks:
  pcm_network:
    driver: bridge
  photo-network:  # Keep for backward compatibility
    driver: bridge

volumes:
  oracle_data:
  redis_data:
  uploads: