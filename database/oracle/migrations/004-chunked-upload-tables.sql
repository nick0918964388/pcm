-- 分塊上傳資料表結構
-- Task 4.1: 建立分塊上傳核心架構

-- 上傳會話表 - 追蹤檔案分塊上傳的會話狀態
CREATE TABLE upload_sessions (
    upload_id       VARCHAR2(36) PRIMARY KEY,           -- 上傳會話 ID (GUID)
    file_name       VARCHAR2(255) NOT NULL,             -- 檔案名稱
    file_size       NUMBER(15) NOT NULL,                -- 檔案大小 (bytes)
    total_chunks    NUMBER(10) NOT NULL,                -- 總分塊數量
    chunk_size      NUMBER(10) NOT NULL,                -- 分塊大小 (bytes)
    album_id        VARCHAR2(36) NOT NULL,              -- 相簿 ID
    uploaded_by     VARCHAR2(50) NOT NULL,              -- 上傳使用者
    status          VARCHAR2(20) DEFAULT 'initialized', -- 狀態：initialized, uploading, completed, failed, cancelled
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    expires_at      TIMESTAMP NOT NULL,                 -- 會話過期時間 (24小時)

    CONSTRAINT fk_upload_sessions_album
        FOREIGN KEY (album_id) REFERENCES photo_albums(id),
    CONSTRAINT ck_upload_sessions_status
        CHECK (status IN ('initialized', 'uploading', 'completed', 'failed', 'cancelled')),
    CONSTRAINT ck_upload_sessions_file_size
        CHECK (file_size > 0),
    CONSTRAINT ck_upload_sessions_chunks
        CHECK (total_chunks > 0 AND chunk_size > 0)
);

-- 上傳分塊表 - 記錄每個分塊的上傳狀態
CREATE TABLE upload_chunks (
    upload_id       VARCHAR2(36) NOT NULL,              -- 上傳會話 ID
    chunk_number    NUMBER(10) NOT NULL,                -- 分塊編號 (從1開始)
    checksum        VARCHAR2(64) NOT NULL,              -- SHA-256 檢查總和
    chunk_size      NUMBER(10) NOT NULL,                -- 分塊實際大小
    uploaded_at     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status          VARCHAR2(20) DEFAULT 'completed',   -- 狀態：uploading, completed, failed
    retry_count     NUMBER(3) DEFAULT 0,                -- 重試次數

    CONSTRAINT pk_upload_chunks
        PRIMARY KEY (upload_id, chunk_number),
    CONSTRAINT fk_upload_chunks_session
        FOREIGN KEY (upload_id) REFERENCES upload_sessions(upload_id) ON DELETE CASCADE,
    CONSTRAINT ck_upload_chunks_status
        CHECK (status IN ('uploading', 'completed', 'failed')),
    CONSTRAINT ck_upload_chunks_number
        CHECK (chunk_number > 0),
    CONSTRAINT ck_upload_chunks_size
        CHECK (chunk_size > 0),
    CONSTRAINT ck_upload_chunks_retry
        CHECK (retry_count >= 0 AND retry_count <= 5)
);

-- 索引優化查詢效能
CREATE INDEX idx_upload_sessions_status ON upload_sessions(status);
CREATE INDEX idx_upload_sessions_expires ON upload_sessions(expires_at);
CREATE INDEX idx_upload_sessions_album ON upload_sessions(album_id);
CREATE INDEX idx_upload_chunks_status ON upload_chunks(status);

-- 自動更新 updated_at 欄位的觸發器
CREATE OR REPLACE TRIGGER trg_upload_sessions_updated_at
    BEFORE UPDATE ON upload_sessions
    FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;
/

-- 上傳進度檢視表 - 方便查詢上傳進度
CREATE OR REPLACE VIEW upload_progress AS
SELECT
    s.upload_id,
    s.file_name,
    s.file_size,
    s.total_chunks,
    s.album_id,
    s.uploaded_by,
    s.status,
    s.created_at,
    s.expires_at,
    NVL(c.completed_chunks, 0) as completed_chunks,
    NVL(c.uploaded_bytes, 0) as uploaded_bytes,
    CASE
        WHEN s.total_chunks > 0 THEN
            ROUND((NVL(c.completed_chunks, 0) / s.total_chunks) * 100, 2)
        ELSE 0
    END as progress_percentage
FROM upload_sessions s
LEFT JOIN (
    SELECT
        upload_id,
        COUNT(*) as completed_chunks,
        SUM(chunk_size) as uploaded_bytes
    FROM upload_chunks
    WHERE status = 'completed'
    GROUP BY upload_id
) c ON s.upload_id = c.upload_id;

-- 分塊重試記錄表 - 追蹤上傳重試歷史和失敗模式
CREATE TABLE chunk_retry_log (
    id              NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    upload_id       VARCHAR2(36) NOT NULL,              -- 上傳會話 ID
    chunk_number    NUMBER(10) NOT NULL,                -- 分塊編號
    attempt_number  NUMBER(3) NOT NULL,                 -- 重試次數
    success         NUMBER(1) DEFAULT 0,                -- 是否成功 (0=失敗, 1=成功)
    error_message   VARCHAR2(500),                      -- 錯誤訊息
    error_type      VARCHAR2(50),                       -- 錯誤類型 (network_timeout, server_error, etc.)
    retry_delay     NUMBER(10),                         -- 重試延遲時間 (毫秒)
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    CONSTRAINT fk_retry_log_session
        FOREIGN KEY (upload_id) REFERENCES upload_sessions(upload_id) ON DELETE CASCADE,
    CONSTRAINT ck_retry_attempt_number
        CHECK (attempt_number > 0 AND attempt_number <= 10),
    CONSTRAINT ck_retry_success
        CHECK (success IN (0, 1)),
    CONSTRAINT ck_retry_chunk_number
        CHECK (chunk_number > 0)
);

-- 上傳統計檢視表 - 提供恢復決策所需的統計資訊
CREATE OR REPLACE VIEW upload_recovery_stats AS
SELECT
    upload_id,
    COUNT(*) as total_attempts,
    SUM(CASE WHEN success = 1 THEN 1 ELSE 0 END) as successful_attempts,
    ROUND(
        (SUM(CASE WHEN success = 1 THEN 1 ELSE 0 END) / COUNT(*)) * 100, 2
    ) as success_rate,
    MAX(attempt_number) as max_attempts_per_chunk,
    COUNT(DISTINCT chunk_number) as chunks_with_retries,
    MAX(created_at) as last_retry_time,
    LISTAGG(DISTINCT error_type, ',') WITHIN GROUP (ORDER BY error_type) as error_types
FROM chunk_retry_log
GROUP BY upload_id;

-- 系統負載檢視表 - 監控當前上傳負載
CREATE OR REPLACE VIEW system_upload_load AS
SELECT
    COUNT(CASE WHEN status = 'uploading' THEN 1 END) as active_uploads,
    COUNT(CASE WHEN status = 'failed' THEN 1 END) as failed_uploads,
    COUNT(CASE WHEN created_at > SYSDATE - INTERVAL '1' HOUR THEN 1 END) as recent_uploads,
    AVG(
        CASE
            WHEN total_chunks > 0 THEN
                (SELECT COUNT(*) FROM upload_chunks c WHERE c.upload_id = s.upload_id AND c.status = 'completed') / total_chunks
            ELSE 0
        END
    ) * 100 as avg_completion_rate,
    CASE
        WHEN COUNT(CASE WHEN status = 'uploading' THEN 1 END) > 10 THEN 'high'
        WHEN COUNT(CASE WHEN status = 'uploading' THEN 1 END) > 5 THEN 'medium'
        ELSE 'low'
    END as current_load
FROM upload_sessions s
WHERE created_at > SYSDATE - INTERVAL '2' HOUR;

-- 索引優化查詢效能
CREATE INDEX idx_retry_log_upload_id ON chunk_retry_log(upload_id);
CREATE INDEX idx_retry_log_created_at ON chunk_retry_log(created_at);
CREATE INDEX idx_retry_log_success ON chunk_retry_log(success);
CREATE INDEX idx_retry_log_error_type ON chunk_retry_log(error_type);

-- 觸發器：自動設定錯誤類型
CREATE OR REPLACE TRIGGER trg_retry_log_error_type
    BEFORE INSERT ON chunk_retry_log
    FOR EACH ROW
BEGIN
    -- 根據錯誤訊息自動分類錯誤類型
    IF :NEW.error_type IS NULL AND :NEW.error_message IS NOT NULL THEN
        CASE
            WHEN UPPER(:NEW.error_message) LIKE '%TIMEOUT%' OR UPPER(:NEW.error_message) LIKE '%NETWORK%' THEN
                :NEW.error_type := 'network_timeout';
            WHEN UPPER(:NEW.error_message) LIKE '%SERVER%' OR UPPER(:NEW.error_message) LIKE '%500%' THEN
                :NEW.error_type := 'server_error';
            WHEN UPPER(:NEW.error_message) LIKE '%SPACE%' OR UPPER(:NEW.error_message) LIKE '%DISK%' THEN
                :NEW.error_type := 'storage_error';
            WHEN UPPER(:NEW.error_message) LIKE '%PERMISSION%' OR UPPER(:NEW.error_message) LIKE '%ACCESS%' THEN
                :NEW.error_type := 'permission_error';
            ELSE
                :NEW.error_type := 'unknown_error';
        END CASE;
    END IF;
END;
/

-- 定期清理過期記錄的程序
CREATE OR REPLACE PROCEDURE cleanup_expired_retry_logs(retention_days NUMBER DEFAULT 30)
IS
    cleanup_count NUMBER;
BEGIN
    DELETE FROM chunk_retry_log
    WHERE created_at < SYSDATE - retention_days;

    cleanup_count := SQL%ROWCOUNT;
    COMMIT;

    DBMS_OUTPUT.PUT_LINE('清理了 ' || cleanup_count || ' 條過期重試記錄');
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END cleanup_expired_retry_logs;
/

-- 註釋說明
COMMENT ON TABLE upload_sessions IS '分塊上傳會話表，追蹤大檔案分塊上傳的狀態';
COMMENT ON TABLE upload_chunks IS '上傳分塊表，記錄每個分塊的上傳狀態和完整性檢查';
COMMENT ON TABLE chunk_retry_log IS '分塊重試記錄表，追蹤上傳重試歷史和失敗模式分析';
COMMENT ON VIEW upload_progress IS '上傳進度檢視表，提供便捷的進度查詢介面';
COMMENT ON VIEW upload_recovery_stats IS '上傳恢復統計檢視表，支援智慧恢復決策';
COMMENT ON VIEW system_upload_load IS '系統上傳負載檢視表，監控當前上傳系統狀態';

COMMENT ON COLUMN upload_sessions.upload_id IS '唯一的上傳會話識別碼';
COMMENT ON COLUMN upload_sessions.file_size IS '檔案總大小，單位為 bytes';
COMMENT ON COLUMN upload_sessions.total_chunks IS '檔案被分割的總分塊數量';
COMMENT ON COLUMN upload_sessions.chunk_size IS '標準分塊大小，通常為 1MB';
COMMENT ON COLUMN upload_sessions.expires_at IS '會話過期時間，通常為建立後 24 小時';

COMMENT ON COLUMN upload_chunks.chunk_number IS '分塊編號，從 1 開始遞增';
COMMENT ON COLUMN upload_chunks.checksum IS 'SHA-256 檢查總和，用於驗證分塊完整性';
COMMENT ON COLUMN upload_chunks.retry_count IS '分塊上傳重試次數，最大值為 5';

COMMENT ON COLUMN chunk_retry_log.attempt_number IS '分塊的第幾次重試嘗試';
COMMENT ON COLUMN chunk_retry_log.error_type IS '自動分類的錯誤類型，用於失敗模式分析';
COMMENT ON COLUMN chunk_retry_log.retry_delay IS '本次重試前的延遲時間，單位為毫秒';